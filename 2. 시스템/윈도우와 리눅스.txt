1. 운영체제

 OS
 - 운영체제는 일반적으로 사용자와 하드웨어의 중간에서 중계역할을 한다.
 - 사용자는 보안, 데이터 처리, 오류 방지 등의 이유로 하드웨어에 직접적인 접근을 금지하고 있다.
 - 리눅스는 사용자 -> 응용프로그램 -> 쉘 -> 커널 -> 하드웨어로 일방향 접근이 가능하다.
 - 윈도우는 다양한 api을 통해 하드웨어에 접근할 수 있다.


2. 윈도우와 리눅스의 자세한 차이

 윈도우
 - 하이브리드 커널 구조를 지니며 하드웨어 접근은 윈도우 드라이버 모델에 기반한 드라이버로 통신한다.
 - 또한 윈도우 드라이버는 대부분 하드웨어 벤더가 ms의 규격에 맞춰서 개발하여 바이너리 형태로 제공되기 때문에 비공개인 경우가 많다. 윈도우는 드라이버 서명등 보안 검증 절차가 엄격함.
 - 윈도우는 리눅스처럼 파일 시스템을 통해 일관되게 접근 모델이 아닌 api함수들을 호출하여 하드웨어 기능을 사용함

 리눅스
 - 일반적으로 모놀리식(단일화)에 가까운 구조이며 많은 드라이버가 커널 내부에 포함되어 있거나 LKM형태로 제공됨.
 - 장치 드라이버들의 모델은 공개 표준이며 많은 드라이버가 오픈소스로 개발된다.
 - 유닉스의 "모든 것을 파일처럼 다룬다"의 개념이 하드웨어에도 적용되어 있으며 많은 장치들이 /dev 파일 안에 특수 형태의 파일로 저장되어 있고 Open, Read, Write, IOctl 시스템 호출을 통해 하드웨어와 상호작용함.
 - 커널과 장치드라이버가 파일들을 실제 하드웨어 명령어로 변환해줌